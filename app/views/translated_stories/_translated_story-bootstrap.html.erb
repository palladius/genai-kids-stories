<%
  kid = translated_story.story.kid

%>
<div id="<%= dom_id translated_story %>">
<h1><%= waving_flag translated_story.language %>
  <%= translated_story.translated_title %>
  </h1>



<div class="container">
  <div class="row justify-content-end">
    <!--
      <div class="col-9">
        < ! --  HEADER PART - - >
        <p> <strong>Language:</strong> <%= translated_story.language %> </p>
        <p>
          <strong>User:</strong>
          <%= translated_story.user_id %>
          <%= translated_story.name %>
          <%= image_tag translated_story.user.avatar.variant(resize_to_limit: [50, 50]) if translated_story.user.avatar.attached? %>
        </p>

        <p>
          <strong>Story2:</strong>
          <%= translated_story.story_id %> -
          <%= link_to(translated_story.story.title, translated_story.story) %>
        </p>

                  <p>
            <strong>Paragraph strategy:</strong>
            <%= translated_story.paragraph_strategy %>
          </p>


          <p>
            <strong>Genai model:</strong>
            <%= translated_story.genai_model %>
          </p>

            <p>
              <strong>first_born?:</strong>
              <%= translated_story.first_born? %>
              <% unless translated_story.first_born? %>
                (big brother: <%= link_to translated_story.big_brother, translated_story.big_brother %>)
              <% end %>
            </p>
            <p>
            <p>
              <strong>paragraphs_with_no_images:</strong>
              <b><%= translated_story.paragraphs_with_no_images.size %></b> (<%= translated_story.paragraphs_with_no_images %>)
              Call <tt class='debug' >TranslatedStory.find(<%=translated_story.id%>).fix</tt> to fix
            </p>


              <strong>story_paragraphs_images_succint:</strong>
              <%= translated_story.story_paragraphs_images_succint %>

            </p>
      < ! -- END header :) - - >
      </div>
      -->
      <div class="col-3 justify-content-end">
          <%#= render partial: 'kids/floating_card', locals: {kid: kid }  %>
      </div>
  </div>
  <div class="row justify-content-start">
    <% @story_paragraphs.each_with_index do |sp, ix| %>
       <div class="col-6">
        <%= sp.translated_text or
        "<pre>StoryParagraph.find(#{p.id}).after_creation_magic</pre>" %>
       </div>
        <div class="col-3">
          <%= render_image_if_attached(sp.p_image1, verbose: false) %>
        </div>
      <% if ix == 0 %>
          <div class="col-3 justify-content-end clearfix">
             <%= render partial: 'kids/floating_card', locals: {kid: kid }  %>
          </div>
      <% end %>
     <% end %>
  </div>
</div>

 "<tr>
      <td>#{link_to p.story_index, p}🔷
      <td width='45%' class='story' >#{p.original_text}

      <td width='45%' class='story' >
        #{p.translated_text or "<pre>StoryParagraph.find(#{p.id}).after_creation_magic</pre>".html_safe}
      <td>
          #{link_to p.id, p}
          #{link_to '✍🏿', edit_story_paragraph_path(p)}
         ".html_safe

<!-- HTML !-->
<button class="button-34" role="button" onclick="window.location.href='/translated_stories/<%= translated_story.id %>/fix';" >Fix TStory: fix()</button>
<%#= button_to 'Fix TStory2: fix()', class: "button-34 debug" , role: "button", action: "fix_translated_story" %>

<%#= link_to "Fix", fix_translated_story_path, remote: true, class: "button-34" %>
<%#= button_to "fix TS.#{translated_story.id}", fix_translated_story_path(translated_story.id), id: translated_story.id %>



<% if (not @story_paragraphs.nil?) and @story_paragraphs.count > 0 %>
  <h3>🐠 Translated Story (<%= @story_paragraphs.count %> paragraphs)</h3>

  <%= @story_paragraphs.count %>

  <table border="0" >
    <% @story_paragraphs.each do |sp| %>
      <%= render_working_story_paragraph(sp) %>
    <% end %>
  </table>
<% else  %>
  <!-- PAR PREVIEW -->
  <h3>👁️ Paragraphs Preview</h3>

 😥 @story_paragraphs is either null or empty. Let's generate them!<br/>
 @execute_now=<%=@execute_now %>

  <% if params[:execute_now] == 'true' %>
    💻 NOW: IMMEDIATE execution... generating kids of this story in the <b> <%= translated_story.paragraph_strategy %></b> strategy, with language=<%= translated_story.language %>.
    <% @translated_story.generate_polymorphic_paragraphs %>
  <%  else %>
    💻😴 Enqueued a Delayed execution to 'translated_story::generate_polymorphic_paragraphs' queue... use  (<%= link_to('execute_now!', "#{request.fullpath.to_s}?execute_now=true") %> ) to generate immediately!
    <% @translated_story.delay(queue: 'translated_story::generate_polymorphic_paragraphs').generate_polymorphic_paragraphs %>
    TODO(ricc): make sure you only enqueue this ONCE based on a key (in this case, @translated_story.id should suffice)
  <%  end %>

    <% translated_story.polymorphic_paragraphs.each_with_index do |p, ix|  %>
      <p>
          🧠 <%= ix+1 %>🧠
          <span class='story' ><%= p %></span>
      </p>
    <% end  %>


  <p class='debug' >TODO. This is big - going to require to move and repurpose existing ones under this one :)
  But probably they're going to be these: <tt>Story.find(self.story_id).paragraphs</tt>
  </p>


  <% end  %>
</div>
