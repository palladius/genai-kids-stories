# Remember not to checkin your GCS keyfile to a repository
# Use bin/rails credentials:edit to set the GCP Storage secret (as gcp_storage:storage_access_key)
#   storage_access_key: <%= Rails.application.credentials.dig(:gcp_storage, :storage_access_key) %>
google:
  service: GCS
  project: <%= ENV['PROJECT_ID'] %>
  # Locally I ahve private/sa.json but in the cloud sometimes it gives me error, so /sa.json is always set up
  # correctly from entrypoint and i dont want to introduce duplication...
  credentials: <%= File.exist?(Rails.root.join("private/sa.json")) ? Rails.root.join("private/sa.json") : '/sa.json' %>
  # TODO(ricc): set up those for public access:
  # https://cloud.google.com/storage/docs/access-control/making-data-public?hl=it#buckets
  bucket: <%= ENV['GCS_BUCKET'] %>
  #bucket: genai-kids-stories-<%= Rails.env %>
  #cache_control: "public, max-age=3600"
  # doesnt work on G policies :/
  #public: true

test:
  service: Disk
  root: <%= Rails.root.join("tmp/storage") %>

local:
  service: Disk
  root: <%= Rails.root.join("storage") %>

# Like Local
development:
  service: Disk
  root: <%= Rails.root.join("storage") %>

dev-on-gcp: # This use GCP for Rails Storage and Pgsql for DB
  service: Mirror
  primary: local
  mirrors:
    - google

production: &google
#  service: Mirror
#  primary: local
#  mirrors:
#    - google
